<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>akka on Austin Delamar</title>
    <link>https://amdelamar.com/blog/tags/akka/</link>
    <description>Recent content in akka on Austin Delamar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Aug 2019 12:33:55 -0700</lastBuildDate>
    
	<atom:link href="https://amdelamar.com/blog/tags/akka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unit Testing Akka Http Client</title>
      <link>https://amdelamar.com/blog/unit-testing-akka-http-client/</link>
      <pubDate>Tue, 20 Aug 2019 12:33:55 -0700</pubDate>
      
      <guid>https://amdelamar.com/blog/unit-testing-akka-http-client/</guid>
      <description>Recently, I&amp;rsquo;ve had the pleasure of building a RESTful API using Akka Http.
It was relatively easy to write unit tests and integration tests to ensure the specification of my REST API was working. And for good reason. There are plenty of examples online of how to achieve this, using Akka Testkit.</description>
    </item>
    
    <item>
      <title>Websockets With Akka Http</title>
      <link>https://amdelamar.com/blog/websockets-with-akka-http/</link>
      <pubDate>Wed, 17 Jul 2019 20:24:18 -0700</pubDate>
      
      <guid>https://amdelamar.com/blog/websockets-with-akka-http/</guid>
      <description>This past weekend I wanted to play around with WebSockets and learn how to setup a server and client using them. Then I though, why not try writing a server in Akka Http? Its a great opportunity for me to learn more about Akka streams, as well as a common protocol for push/pull applications on the web, like a chatroom.</description>
    </item>
    
  </channel>
</rss>